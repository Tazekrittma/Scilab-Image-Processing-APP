// BY Massinissa TAZEKRITT

// This GUI file is generated by guibuilder version 4.2.1
//////////
f=figure('figure_position',[344,41],'figure_size',[640,480],'auto_resize','on','background',[33],'figure_name','Figure n°%d','dockable','off','infobar_visible','off','toolbar_visible','off','menubar_visible','off','default_axes','on','visible','off');
//////////
handles.dummy = 0;
handles.ouvrir=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7995513,0.7891156,0.1698718,0.1020408],'Relief','default','SliderStep',[0.01,0.1],'String','ouvrir','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','ouvrir','Callback','ouvrir_callback(handles)')
handles.histograme=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.6251175,0.6053288,0.3517094,0.1300076],'Relief','default','SliderStep',[0.01,0.1],'String','histograme','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','histograme','Callback','histograme_callback(handles)')
handles.axe1= newaxes();handles.axe1.margins = [ 0 0 0 0];handles.axe1.axes_bounds = [0.0144231,0.0172109,0.5849359,0.6780045];
handles.pb_extentionLD=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.6320513,0.4924414,0.3238462,0.0981481],'Relief','default','SliderStep',[0.01,0.1],'String','Extension linéaire dynamique','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_extentionLD','Callback','pb_extentionLD_callback(handles)')
handles.pb_egalisationH=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.6320513,0.3754573,0.3238462,0.0981481],'Relief','default','SliderStep',[0.01,0.1],'String','Egalisation de lhistogramme','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_egalisationH','Callback','pb_egalisationH_callback(handles)')
handles.pb_filtrePA=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.5651175,0.1612547,0.4117094,0.1300076],'Relief','default','SliderStep',[0.01,0.1],'String','Filtres passe haut','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_filtrePA','Callback','pb_filtrePA_callback(handles)')
handles.pb_Sobel=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.5567521,0.0438095,0.2035897,0.11],'Relief','default','SliderStep',[0.01,0.1],'String','Sobel','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_Sobel','Callback','pb_Sobel_callback(handles)')
handles.pb_laplacien=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7788889,0.0500831,0.2035897,0.11],'Relief','default','SliderStep',[0.01,0.1],'String','laplacien','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_laplacien','Callback','pb_laplacien_callback(handles)')
handles.pb_filtrepb=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0476923,0.1719274,0.4117094,0.1300076],'Relief','default','SliderStep',[0.01,0.1],'String','Filtres pass bas *moyenneur*','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_filtrepb','Callback','pb_filtrepb_callback(handles)')
handles.pb_seven=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.2632051,0.0489569,0.2035897,0.11],'Relief','default','SliderStep',[0.01,0.1],'String','7x7','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_seven','Callback','pb_seven_callback(handles)')
handles.pb_aiddde=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.6285256,0.7981859,0.1607051,0.0843084],'Relief','default','SliderStep',[0.01,0.1],'String','Menu Aide','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_aiddde','Callback','pb_aiddde_callback(handles)')
handles.trispb=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0585256,0.0553515,0.1898718,0.0939002],'Relief','default','SliderStep',[0.01,0.1],'String','Filtre 3x3','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','trispb','Callback','trispb_callback(handles)')


f.visible = "on";


//////////
// Callbacks are defined as below. Please do not delete the comments as it will be used in coming version
//////////







function ouvrir_callback(handles)
//Write your callback for  ouvrir  here
fn = uigetfile('*');
S = imread(fn);
imshow(S);
handles.S=S;

handles = resume(handles);
endfunction






function histograme_callback(handles)

//Write your callback for  histograme  here
// Compute the histogram
//histogram = hist(handles.S);
[l,c] = size(handles.S); 
h=zeros(1,256)
for i = 1:l
    for j = 1:c
        h(handles.S(i,j)+1)=h(handles.S(i,j)+1)+1
    end
end
f=figure();
subplot(1,3,1), plot(h);
subplot(1,3,2), bar(imhist(handles.S));
subplot(1,3,3), imshow(handles.S); 

//% Display the histogram
//clf();  //% Clear the current figure (if any)
//histplot(histogram);

endfunction


function pb_extentionLD_callback(handles)
//Write your callback for  pb_extentionLD  here
y=handles.S;
x=handles.S;
[l,c] = size(x);

for i = 1:l
    for j = 1:c
        y(i,j)= (255/(max(x)-min(x)))*(x(i,j) - min(x));
    end
end
f=figure();
subplot(1,2,1), imshow(x), title('image orginale');
subplot(1,2,2), imshow(y), title('image avec extension linéaire de dynamique');

endfunction


function pb_egalisationH_callback(handles)
//Write your callback for  pb_egalisationH  here

// Méthode 2: Egalisation de l'histogramme
y=handles.S;
x=handles.S;
[l,c] = size(x);


// Etape 1
h=zeros(1,256)
for i = 1:l
    for j = 1:c
        h(x(i,j)+1)=h(x(i,j)+1)+1
    end
end
// Etape 2
k=size(h,2)
for i = 1:k
    somme = 0
    for j = 1:i
        somme = somme + h(j)
    end
    C(i) = somme
end
// Etape 3
y=x;
for i = 1:l
    for j = 1:c
        y(i,j)= 255*C(x(i,j))/(l*c);
    end
end
f=figure();
subplot(2,2,1), imshow(x), title('image orginale');
subplot(2,2,2), bar(imhist(x));
subplot(2,2,3), imshow(y), title('image avec égalisation d''histogramme');
subplot(2,2,4), bar(imhist(y));



endfunction


function pb_filtrePA_callback(handles)
//Write your callback for  pb_filtrePA  here
img = handles.S;


laplacien_4 = [0 1 0; 1 -4 1; 0 1 0];
laplacien_8 = [1 1 1; 1 -8 1; 1 1 1];

sobel_h = [-1 -2 -1; 0 0 0; 1 2 1];
sobel_v = [-1 0 1; -2 0 2; -1 0 1];

res1 = filter2(img,laplacien_4);
res2 = filter2(img,laplacien_8);

res3 = filter2(img,sobel_v);
res4 = filter2(img,sobel_h);
res5=uint8(sqrt(res3.^2 +res4.^2));

f = figure();
subplot(2,3,1); imshow(img); title('image orginale');
subplot(2,3,2); imshow(res1); title('Laplacien-4');
subplot(2,3,3); imshow(res2); title('Laplacien-8');

subplot(2,3,4); imshow(res3); title('Sobel V');
subplot(2,3,5); imshow(res4); title('Sobel H');
subplot(2,3,6); imshow(res5); title('Module du gradient de Sobel');

endfunction


function pb_Sobel_callback(handles)
//Write your callback for  pb_Sobel  here

img = handles.S;

sobel_h = [-1 -2 -1; 0 0 0; 1 2 1];
sobel_v = [-1 0 1; -2 0 2; -1 0 1];


res3 = filter2(img,sobel_v);
res4 = filter2(img,sobel_h);
res5=uint8(sqrt(res3.^2 +res4.^2));

f = figure();
subplot(1,3,1); imshow(res3); title('Sobel V');
subplot(1,3,2); imshow(res4); title('Sobel H');
subplot(1,3,3); imshow(res5); title('Module du gradient de Sobel');

endfunction


function pb_laplacien_callback(handles)
//Write your callback for  pb_laplacien  here

img = handles.S;


laplacien_4 = [0 1 0; 1 -4 1; 0 1 0];
laplacien_8 = [1 1 1; 1 -8 1; 1 1 1];

res1 = filter2(img,laplacien_4);
res2 = filter2(img,laplacien_8);

f = figure();
subplot(1,3,1); imshow(img); title('image orginale');
subplot(1,3,2); imshow(res1); title('Laplacien-4');
subplot(1,3,3); imshow(res2); title('Laplacien-8');

endfunction


function pb_filtrepb_callback(handles)
//Write your callback for  pb_filtrepb  here

x = handles.S;
y = imnoise(x, 'gaussian');
z = imnoise(x, 'salt & pepper');

// Filtre moyenneur
k=[1/9 1/9 1/9; 1/9 1/9 1/9; 1/9 1/9 1/9]

res1 = filter2(y,k);
res1=uint8(res1);

res2 = filter2(z,k);
res2=uint8(res2);

f = figure();
subplot(2,2,1); imshow(y); title('Image with gaussian noise');
subplot(2,2,2); imshow(res1); 
subplot(2,2,3); imshow(z); title('Image with salt & pepper noise');
subplot(2,2,4); imshow(res2);

endfunction


function pbtrois_callback(handles)
//Write your callback for  pb-trois  here
x = handles.S;
y = imnoise(x, 'gaussian');
z = imnoise(x, 'salt & pepper');

// Filtre moyenneur
k=[1/9 1/9 1/9; 1/9 1/9 1/9; 1/9 1/9 1/9]

res1 = filter2(y,k);
res1=uint8(res1);

res2 = filter2(z,k);
res2=uint8(res2);

f = figure();
subplot(2,2,1); imshow(y); title('Image with gaussian noise');
subplot(2,2,2); imshow(res1); 
subplot(2,2,3); imshow(z); title('Image with salt & pepper noise');
subplot(2,2,4); imshow(res2);
endfunction


function pb_seven_callback(handles)
//Write your callback for  pb_seven  here

x = handles.S;
y = imnoise(x, 'gaussian');
z = imnoise(x, 'salt & pepper');

// Filtre moyenneur
k= (1/9) * ones(7, 7);

res1 = filter2(y,k);
res1=uint8(res1);

res2 = filter2(z,k);
res2=uint8(res2);

f = figure();
subplot(2,2,1); imshow(y); title('Image with gaussian noise');
subplot(2,2,2); imshow(res1); 
subplot(2,2,3); imshow(z); title('Image with salt & pepper noise');
subplot(2,2,4); imshow(res2);

endfunction


function pb_aiddde_callback(handles)
//Write your callback for  pb_aiddde  here
//Write your callback for  Aide  here
h=figure();
// Add a text uicontrol in figure 3

uicontrol(h, "style", "text", ...
             "string", "Bienvenue dans Image Processing APP!", ...
             "position", [0 400 700 100], ...
             "fontsize",20);

uicontrol(h, "style", "text", ...
             "string", "1. Cliquez sur *Ouvrir* pour sélectionner et ouvrir une image.", ...
             "position", [0 300 700 100], ...
             "fontsize",15);
             
uicontrol(h, "style", "text", ...
             "string", "2. Utilisez *Histogramme* pour afficher lhistogramme de limage.", ...
             "position", [0 200 700 100], ...
             "fontsize",15);

uicontrol(h, "style", "text", ...
             "string", "3.Les filtres (*Filtre Pass Bas*, *Filtre Pass Haut*, *Moyenneur*) sont disponibles", ...
             "position", [0 100 700 100], ...
             "fontsize",15);

uicontrol(h, "style", "text", ...
             "string", "4. Vous pouvez sélectionner la taille du filtre (3x3 ou 7x7).", ...
             "position", [0 0 700 100], ...
             "fontsize",15);
             
             
endfunction


function trispb_callback(handles)
//Write your callback for  pb_filtrepb  here

x = handles.S;
y = imnoise(x, 'gaussian');
z = imnoise(x, 'salt & pepper');

// Filtre moyenneur
k=[1/9 1/9 1/9; 1/9 1/9 1/9; 1/9 1/9 1/9]

res1 = filter2(y,k);
res1=uint8(res1);

res2 = filter2(z,k);
res2=uint8(res2);

f = figure();
subplot(2,2,1); imshow(y); title('Image with gaussian noise');
subplot(2,2,2); imshow(res1); 
subplot(2,2,3); imshow(z); title('Image with salt & pepper noise');
subplot(2,2,4); imshow(res2);
endfunction

// BY Massinissa TAZEKRITT _ BY M.T
